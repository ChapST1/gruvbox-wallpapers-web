---
import { handleCategoryActive } from "@lib/utils/handle-category-active";
import { getCategories } from "@services/get-categories";
import DarkMode from "./dark-mode.astro";

interface Props {
  category: string;
}

const { category } = Astro.props;
const categories = getCategories();
---

<input type="checkbox" id="checkbox-btn" class="hidden peer" />

<label
  for="checkbox-btn"
  id="hamburguer"
  class="size-16 fixed bottom-2 bg-bg dark:bg-bg-dark peer-checked:rotate-90 peer-checked:z-[60] z-40: dark:border-bg-accent-dark border-bg-accent right-2 border-2 text-primary-dark dark:text-primary rounded-full flex items-center justify-center md:hidden duration-300 z-[50]"
>
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    stroke-width="2"
    stroke="currentColor"
    fill="none"
    stroke-linecap="round"
    stroke-linejoin="round"
    ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
      d="M4 6l16 0"></path><path d="M4 12l16 0"></path><path d="M4 18l16 0"
    ></path></svg
  >
</label>

<nav
  class="opacity-0 invisible duration-300 z-50 fixed top-16 left-0 peer-checked:opacity-100 peer-checked:visible md:hidden w-full h-[calc(100dvh-64px)] bg-bg/95 dark:bg-bg-dark/95"
>
  <ul
    id="nav-bar-mobile"
    class="duration-300 w-full h-full flex flex-col items-center justify-center gap-4 z-10 *:text-paragraph-color *:dark:text-paragraph-color-dark"
  >
    {
      categories?.map(({ href, name }) => {
        const styles = handleCategoryActive(category, name);

        return (
          <li>
            <a
              id="link"
              href={href}
              class={`capitalize py-2 px-3 rounded-md ${styles}  relative z-10 duration-300`}
            >
              {name}
            </a>
          </li>
        );
      })
    }
    <DarkMode />
  </ul>
</nav>
